//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class PropertySetDefinitions {
    
    private PropertySet[] propertySetField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PropertySet")]
    public PropertySet[] PropertySet {
        get {
            return this.propertySetField;
        }
        set {
            this.propertySetField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class PropertySet : PropertySetType {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class PropertySetType {
    
    private string nameField;
    
    private string descriptionField;
    
    private Properties propertiesField;
    
    private bool isIgnoredField;
    
    private string referenceIdField;
    
    private string ifcVersionField;
    
    public PropertySetType() {
        this.isIgnoredField = false;
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public Properties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isIgnored {
        get {
            return this.isIgnoredField;
        }
        set {
            this.isIgnoredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string referenceId {
        get {
            return this.referenceIdField;
        }
        set {
            this.referenceIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ifcVersion {
        get {
            return this.ifcVersionField;
        }
        set {
            this.ifcVersionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class Properties {
    
    private PropertyType[] propertyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Property")]
    public PropertyType[] Property {
        get {
            return this.propertyField;
        }
        set {
            this.propertyField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyListValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ComplexPropertyType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertySingleValueType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public abstract partial class PropertyType {
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntegerCompareType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(StringCompareType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public abstract partial class CompareType {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class IntegerCompareType : CompareType {
    
    private VariableType getValueField;
    
    private string referenceValueField;
    
    private IntegerCompareTypeComparisonOperator comparisonOperatorField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string ReferenceValue {
        get {
            return this.referenceValueField;
        }
        set {
            this.referenceValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public IntegerCompareTypeComparisonOperator comparisonOperator {
        get {
            return this.comparisonOperatorField;
        }
        set {
            this.comparisonOperatorField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UdaVariableType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateVariableType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public abstract partial class VariableType {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class UdaVariableType : VariableType {
    
    private string udaNameField;
    
    /// <remarks/>
    public string UdaName {
        get {
            return this.udaNameField;
        }
        set {
            this.udaNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class TemplateVariableType : VariableType {
    
    private string templateNameField;
    
    /// <remarks/>
    public string TemplateName {
        get {
            return this.templateNameField;
        }
        set {
            this.templateNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public enum IntegerCompareTypeComparisonOperator {
    
    /// <remarks/>
    Equal,
    
    /// <remarks/>
    GreaterThan,
    
    /// <remarks/>
    GreaterThanOrEqual,
    
    /// <remarks/>
    LessThan,
    
    /// <remarks/>
    LessThanOrEqual,
    
    /// <remarks/>
    NotEqual,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class StringCompareType : CompareType {
    
    private VariableType getValueField;
    
    private string referenceValueField;
    
    private StringCompareTypeComparisonOperator comparisonOperatorField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    public string ReferenceValue {
        get {
            return this.referenceValueField;
        }
        set {
            this.referenceValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StringCompareTypeComparisonOperator comparisonOperator {
        get {
            return this.comparisonOperatorField;
        }
        set {
            this.comparisonOperatorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public enum StringCompareTypeComparisonOperator {
    
    /// <remarks/>
    Equal,
    
    /// <remarks/>
    NotEqual,
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LogicalTypeFromIntegerVariable))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LogicalTypeFromStringVariable))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public abstract partial class LogicalTypeConversion {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class LogicalTypeFromIntegerVariable : LogicalTypeConversion {
    
    private VariableType getValueField;
    
    private LogicalTypeFromIntegerVariableKeyValuePair[] keyValuePairField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyValuePair")]
    public LogicalTypeFromIntegerVariableKeyValuePair[] KeyValuePair {
        get {
            return this.keyValuePairField;
        }
        set {
            this.keyValuePairField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public partial class LogicalTypeFromIntegerVariableKeyValuePair {
    
    private string keyField;
    
    private LogicalType valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    public LogicalType Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public enum LogicalType {
    
    /// <remarks/>
    @false,
    
    /// <remarks/>
    @true,
    
    /// <remarks/>
    unknown,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class LogicalTypeFromStringVariable : LogicalTypeConversion {
    
    private VariableType getValueField;
    
    private LogicalTypeFromStringVariableKeyValuePair[] keyValuePairField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyValuePair")]
    public LogicalTypeFromStringVariableKeyValuePair[] KeyValuePair {
        get {
            return this.keyValuePairField;
        }
        set {
            this.keyValuePairField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public partial class LogicalTypeFromStringVariableKeyValuePair {
    
    private string keyField;
    
    private LogicalType valueField;
    
    /// <remarks/>
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    public LogicalType Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanTypeFromIntegerVariable))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanTypeFromStringVariable))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public abstract partial class BooleanTypeConversion {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class BooleanTypeFromIntegerVariable : BooleanTypeConversion {
    
    private VariableType getValueField;
    
    private BooleanTypeFromIntegerVariableKeyValuePair[] keyValuePairField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyValuePair")]
    public BooleanTypeFromIntegerVariableKeyValuePair[] KeyValuePair {
        get {
            return this.keyValuePairField;
        }
        set {
            this.keyValuePairField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public partial class BooleanTypeFromIntegerVariableKeyValuePair {
    
    private string keyField;
    
    private bool valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    public bool Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class BooleanTypeFromStringVariable : BooleanTypeConversion {
    
    private VariableType getValueField;
    
    private BooleanTypeFromStringVariableKeyValuePair[] keyValuePairField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyValuePair")]
    public BooleanTypeFromStringVariableKeyValuePair[] KeyValuePair {
        get {
            return this.keyValuePairField;
        }
        set {
            this.keyValuePairField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public partial class BooleanTypeFromStringVariableKeyValuePair {
    
    private string keyField;
    
    private bool valueField;
    
    /// <remarks/>
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    public bool Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MeasureValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RealValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntegerValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(StringValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LogicalValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanValueType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public abstract partial class PropertyValueType {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class MeasureValueType : PropertyValueType {
    
    private VariableType getValueField;
    
    private double defaultField;
    
    private bool defaultFieldSpecified;
    
    private MeasureValueTypeMeasureType measureTypeField;
    
    private double conversionField;
    
    private double accuracyField;
    
    private bool accuracyFieldSpecified;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    public double Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified {
        get {
            return this.defaultFieldSpecified;
        }
        set {
            this.defaultFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public MeasureValueTypeMeasureType measureType {
        get {
            return this.measureTypeField;
        }
        set {
            this.measureTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public double conversion {
        get {
            return this.conversionField;
        }
        set {
            this.conversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public double accuracy {
        get {
            return this.accuracyField;
        }
        set {
            this.accuracyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool accuracySpecified {
        get {
            return this.accuracyFieldSpecified;
        }
        set {
            this.accuracyFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public enum MeasureValueTypeMeasureType {
    
    /// <remarks/>
    IfcAbsorbedDoseMeasure,
    
    /// <remarks/>
    IfcAccelerationMeasure,
    
    /// <remarks/>
    IfcAmountOfSubstanceMeasure,
    
    /// <remarks/>
    IfcAngularVelocityMeasure,
    
    /// <remarks/>
    IfcArcIndex,
    
    /// <remarks/>
    IfcAreaDensityMeasure,
    
    /// <remarks/>
    IfcAreaMeasure,
    
    /// <remarks/>
    IfcBinary,
    
    /// <remarks/>
    IfcBoolean,
    
    /// <remarks/>
    IfcBoxAlignment,
    
    /// <remarks/>
    IfcCardinalPointReference,
    
    /// <remarks/>
    IfcComplexNumber,
    
    /// <remarks/>
    IfcCompoundPlaneAngleMeasure,
    
    /// <remarks/>
    IfcContextDependentMeasure,
    
    /// <remarks/>
    IfcCountMeasure,
    
    /// <remarks/>
    IfcCurvatureMeasure,
    
    /// <remarks/>
    IfcDate,
    
    /// <remarks/>
    IfcDateTime,
    
    /// <remarks/>
    IfcDayInMonthNumber,
    
    /// <remarks/>
    IfcDayInWeekNumber,
    
    /// <remarks/>
    IfcDaylightSavingHour,
    
    /// <remarks/>
    IfcDescriptiveMeasure,
    
    /// <remarks/>
    IfcDimensionCount,
    
    /// <remarks/>
    IfcDoseEquivalentMeasure,
    
    /// <remarks/>
    IfcDuration,
    
    /// <remarks/>
    IfcDynamicViscosityMeasure,
    
    /// <remarks/>
    IfcElectricCapacitanceMeasure,
    
    /// <remarks/>
    IfcElectricChargeMeasure,
    
    /// <remarks/>
    IfcElectricConductanceMeasure,
    
    /// <remarks/>
    IfcElectricCurrentMeasure,
    
    /// <remarks/>
    IfcElectricResistanceMeasure,
    
    /// <remarks/>
    IfcElectricVoltageMeasure,
    
    /// <remarks/>
    IfcEnergyMeasure,
    
    /// <remarks/>
    IfcFontStyle,
    
    /// <remarks/>
    IfcFontVariant,
    
    /// <remarks/>
    IfcFontWeight,
    
    /// <remarks/>
    IfcForceMeasure,
    
    /// <remarks/>
    IfcFrequencyMeasure,
    
    /// <remarks/>
    IfcGloballyUniqueId,
    
    /// <remarks/>
    IfcHeatFluxDensityMeasure,
    
    /// <remarks/>
    IfcHeatingValueMeasure,
    
    /// <remarks/>
    IfcHourInDay,
    
    /// <remarks/>
    IfcIdentifier,
    
    /// <remarks/>
    IfcIlluminanceMeasure,
    
    /// <remarks/>
    IfcInductanceMeasure,
    
    /// <remarks/>
    IfcInteger,
    
    /// <remarks/>
    IfcIntegerCountRateMeasure,
    
    /// <remarks/>
    IfcIonConcentrationMeasure,
    
    /// <remarks/>
    IfcIsothermalMoistureCapacityMeasure,
    
    /// <remarks/>
    IfcKinematicViscosityMeasure,
    
    /// <remarks/>
    IfcLabel,
    
    /// <remarks/>
    IfcLanguageId,
    
    /// <remarks/>
    IfcLengthMeasure,
    
    /// <remarks/>
    IfcLinearForceMeasure,
    
    /// <remarks/>
    IfcLinearMomentMeasure,
    
    /// <remarks/>
    IfcLinearStiffnessMeasure,
    
    /// <remarks/>
    IfcLinearVelocityMeasure,
    
    /// <remarks/>
    IfcLineIndex,
    
    /// <remarks/>
    IfcLogical,
    
    /// <remarks/>
    IfcLuminousFluxMeasure,
    
    /// <remarks/>
    IfcLuminousIntensityDistributionMeasure,
    
    /// <remarks/>
    IfcLuminousIntensityMeasure,
    
    /// <remarks/>
    IfcMagneticFluxDensityMeasure,
    
    /// <remarks/>
    IfcMagneticFluxMeasure,
    
    /// <remarks/>
    IfcMassDensityMeasure,
    
    /// <remarks/>
    IfcMassFlowRateMeasure,
    
    /// <remarks/>
    IfcMassMeasure,
    
    /// <remarks/>
    IfcMassPerLengthMeasure,
    
    /// <remarks/>
    IfcMinuteInHour,
    
    /// <remarks/>
    IfcModulusOfElasticityMeasure,
    
    /// <remarks/>
    IfcModulusOfLinearSubgradeReactionMeasure,
    
    /// <remarks/>
    IfcModulusOfRotationalSubgradeReactionMeasure,
    
    /// <remarks/>
    IfcModulusOfSubgradeReactionMeasure,
    
    /// <remarks/>
    IfcMoistureDiffusivityMeasure,
    
    /// <remarks/>
    IfcMolecularWeightMeasure,
    
    /// <remarks/>
    IfcMomentOfInertiaMeasure,
    
    /// <remarks/>
    IfcMonetaryMeasure,
    
    /// <remarks/>
    IfcMonthInYearNumber,
    
    /// <remarks/>
    IfcNonNegativeLengthMeasure,
    
    /// <remarks/>
    IfcNormalisedRatioMeasure,
    
    /// <remarks/>
    IfcNumericMeasure,
    
    /// <remarks/>
    IfcParameterValue,
    
    /// <remarks/>
    IfcPHMeasure,
    
    /// <remarks/>
    IfcPlanarForceMeasure,
    
    /// <remarks/>
    IfcPlaneAngleMeasure,
    
    /// <remarks/>
    IfcPositiveInteger,
    
    /// <remarks/>
    IfcPositiveLengthMeasure,
    
    /// <remarks/>
    IfcPositivePlaneAngleMeasure,
    
    /// <remarks/>
    IfcPositiveRatioMeasure,
    
    /// <remarks/>
    IfcPowerMeasure,
    
    /// <remarks/>
    IfcPresentableText,
    
    /// <remarks/>
    IfcPressureMeasure,
    
    /// <remarks/>
    IfcPropertySetDefinitionSet,
    
    /// <remarks/>
    IfcRadioActivityMeasure,
    
    /// <remarks/>
    IfcRatioMeasure,
    
    /// <remarks/>
    IfcReal,
    
    /// <remarks/>
    IfcRotationalFrequencyMeasure,
    
    /// <remarks/>
    IfcRotationalMassMeasure,
    
    /// <remarks/>
    IfcRotationalStiffnessMeasure,
    
    /// <remarks/>
    IfcSecondInMinute,
    
    /// <remarks/>
    IfcSectionalAreaIntegralMeasure,
    
    /// <remarks/>
    IfcSectionModulusMeasure,
    
    /// <remarks/>
    IfcShearModulusMeasure,
    
    /// <remarks/>
    IfcSolidAngleMeasure,
    
    /// <remarks/>
    IfcSoundPowerLevelMeasure,
    
    /// <remarks/>
    IfcSoundPowerMeasure,
    
    /// <remarks/>
    IfcSoundPressureLevelMeasure,
    
    /// <remarks/>
    IfcSoundPressureMeasure,
    
    /// <remarks/>
    IfcSpecificHeatCapacityMeasure,
    
    /// <remarks/>
    IfcSpecularExponent,
    
    /// <remarks/>
    IfcSpecularRoughness,
    
    /// <remarks/>
    IfcStrippedOptional,
    
    /// <remarks/>
    IfcTemperatureGradientMeasure,
    
    /// <remarks/>
    IfcTemperatureRateOfChangeMeasure,
    
    /// <remarks/>
    IfcText,
    
    /// <remarks/>
    IfcTextAlignment,
    
    /// <remarks/>
    IfcTextDecoration,
    
    /// <remarks/>
    IfcTextFontName,
    
    /// <remarks/>
    IfcTextTransformation,
    
    /// <remarks/>
    IfcThermalAdmittanceMeasure,
    
    /// <remarks/>
    IfcThermalConductivityMeasure,
    
    /// <remarks/>
    IfcThermalExpansionCoefficientMeasure,
    
    /// <remarks/>
    IfcThermalResistanceMeasure,
    
    /// <remarks/>
    IfcThermalTransmittanceMeasure,
    
    /// <remarks/>
    IfcThermodynamicTemperatureMeasure,
    
    /// <remarks/>
    IfcTime,
    
    /// <remarks/>
    IfcTimeMeasure,
    
    /// <remarks/>
    IfcTimeStamp,
    
    /// <remarks/>
    IfcTorqueMeasure,
    
    /// <remarks/>
    IfcURIReference,
    
    /// <remarks/>
    IfcVaporPermeabilityMeasure,
    
    /// <remarks/>
    IfcWarpingConstantMeasure,
    
    /// <remarks/>
    IfcWarpingMomentMeasure,
    
    /// <remarks/>
    IfcVolumeMeasure,
    
    /// <remarks/>
    IfcVolumetricFlowRateMeasure,
    
    /// <remarks/>
    IfcYearNumber,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class TimeValueType : PropertyValueType {
    
    private VariableType getValueField;
    
    private string defaultField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class RealValueType : PropertyValueType {
    
    private VariableType getValueField;
    
    private double defaultField;
    
    private bool defaultFieldSpecified;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    public double Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified {
        get {
            return this.defaultFieldSpecified;
        }
        set {
            this.defaultFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class IntegerValueType : PropertyValueType {
    
    private VariableType getValueField;
    
    private string defaultField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class StringValueType : PropertyValueType {
    
    private VariableType getValueField;
    
    private string defaultField;
    
    private StringValueTypeStringType stringTypeField;
    
    /// <remarks/>
    public VariableType GetValue {
        get {
            return this.getValueField;
        }
        set {
            this.getValueField = value;
        }
    }
    
    /// <remarks/>
    public string Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StringValueTypeStringType stringType {
        get {
            return this.stringTypeField;
        }
        set {
            this.stringTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public enum StringValueTypeStringType {
    
    /// <remarks/>
    IfcLabel,
    
    /// <remarks/>
    IfcIdentifier,
    
    /// <remarks/>
    IfcText,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class LogicalValueType : PropertyValueType {
    
    private LogicalTypeConversion valueConversionField;
    
    private LogicalType defaultField;
    
    private bool defaultFieldSpecified;
    
    /// <remarks/>
    public LogicalTypeConversion ValueConversion {
        get {
            return this.valueConversionField;
        }
        set {
            this.valueConversionField = value;
        }
    }
    
    /// <remarks/>
    public LogicalType Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified {
        get {
            return this.defaultFieldSpecified;
        }
        set {
            this.defaultFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class BooleanValueType : PropertyValueType {
    
    private BooleanTypeConversion valueConversionField;
    
    private bool defaultField;
    
    private bool defaultFieldSpecified;
    
    /// <remarks/>
    public BooleanTypeConversion ValueConversion {
        get {
            return this.valueConversionField;
        }
        set {
            this.valueConversionField = value;
        }
    }
    
    /// <remarks/>
    public bool Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified {
        get {
            return this.defaultFieldSpecified;
        }
        set {
            this.defaultFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class PropertyListValueType : PropertyType {
    
    private string nameField;
    
    private ListProperties listPropertiesField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public ListProperties ListProperties {
        get {
            return this.listPropertiesField;
        }
        set {
            this.listPropertiesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class ListProperties {
    
    private PropertyValueType[] propertyValueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PropertyValue")]
    public PropertyValueType[] PropertyValue {
        get {
            return this.propertyValueField;
        }
        set {
            this.propertyValueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class ComplexPropertyType : PropertyType {
    
    private string nameField;
    
    private string usageNameField;
    
    private Properties propertiesField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string UsageName {
        get {
            return this.usageNameField;
        }
        set {
            this.usageNameField = value;
        }
    }
    
    /// <remarks/>
    public Properties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
public partial class PropertySingleValueType : PropertyType {
    
    private string nameField;
    
    private PropertyValueType propertyValueField;
    
    private bool isIgnoredField;
    
    private bool optionalField;
    
    private bool optionalFieldSpecified;
    
    public PropertySingleValueType() {
        this.isIgnoredField = false;
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public PropertyValueType PropertyValue {
        get {
            return this.propertyValueField;
        }
        set {
            this.propertyValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isIgnored {
        get {
            return this.isIgnoredField;
        }
        set {
            this.isIgnoredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool optional {
        get {
            return this.optionalField;
        }
        set {
            this.optionalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool optionalSpecified {
        get {
            return this.optionalFieldSpecified;
        }
        set {
            this.optionalFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class PropertySetConfiguration {
    
    private PropertySetBind[] propertySetBindingsField;
    
    private PropertySet[] propertySetDefinitionsField;
    
    private decimal versionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PropertySetBind", IsNullable=false)]
    public PropertySetBind[] PropertySetBindings {
        get {
            return this.propertySetBindingsField;
        }
        set {
            this.propertySetBindingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PropertySet", IsNullable=false)]
    public PropertySet[] PropertySetDefinitions {
        get {
            return this.propertySetDefinitionsField;
        }
        set {
            this.propertySetDefinitionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class PropertySetBind {
    
    private Include[] rulesField;
    
    private string referenceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Include", IsNullable=false)]
    public Include[] Rules {
        get {
            return this.rulesField;
        }
        set {
            this.rulesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string referenceId {
        get {
            return this.referenceIdField;
        }
        set {
            this.referenceIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class Include {
    
    private CompareType[] whereField;
    
    private IncludeEntityType entityTypeField;
    
    private bool subtypesField;
    
    private string filterField;
    
    public Include() {
        this.filterField = "";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Compare", IsNullable=false)]
    public CompareType[] Where {
        get {
            return this.whereField;
        }
        set {
            this.whereField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public IncludeEntityType entityType {
        get {
            return this.entityTypeField;
        }
        set {
            this.entityTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool subtypes {
        get {
            return this.subtypesField;
        }
        set {
            this.subtypesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("")]
    public string filter {
        get {
            return this.filterField;
        }
        set {
            this.filterField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
public enum IncludeEntityType {
    
    /// <remarks/>
    IfcAirTerminalBox,
    
    /// <remarks/>
    IfcAirTerminal,
    
    /// <remarks/>
    IfcAirToAirHeatRecovery,
    
    /// <remarks/>
    IfcAudioVisualAppliance,
    
    /// <remarks/>
    IfcBeam,
    
    /// <remarks/>
    IfcBearing,
    
    /// <remarks/>
    IfcBoiler,
    
    /// <remarks/>
    IfcBridge,
    
    /// <remarks/>
    IfcBridgePart,
    
    /// <remarks/>
    IfcBuilding,
    
    /// <remarks/>
    IfcBuildingElement,
    
    /// <remarks/>
    IfcBuildingElementComponent,
    
    /// <remarks/>
    IfcBuildingElementPart,
    
    /// <remarks/>
    IfcBuildingElementProxy,
    
    /// <remarks/>
    IfcBuildingStorey,
    
    /// <remarks/>
    IfcBurner,
    
    /// <remarks/>
    IfcCableCarrierFitting,
    
    /// <remarks/>
    IfcCableCarrierSegment,
    
    /// <remarks/>
    IfcCableFitting,
    
    /// <remarks/>
    IfcCableSegment,
    
    /// <remarks/>
    IfcChamferEdgeFeature,
    
    /// <remarks/>
    IfcChiller,
    
    /// <remarks/>
    IfcChimney,
    
    /// <remarks/>
    IfcCoil,
    
    /// <remarks/>
    IfcColumn,
    
    /// <remarks/>
    IfcCommunicationsAppliance,
    
    /// <remarks/>
    IfcCompressor,
    
    /// <remarks/>
    IfcCondenser,
    
    /// <remarks/>
    IfcCooledBeam,
    
    /// <remarks/>
    IfcCoolingTower,
    
    /// <remarks/>
    IfcCovering,
    
    /// <remarks/>
    IfcCurtainWall,
    
    /// <remarks/>
    IfcDamper,
    
    /// <remarks/>
    IfcDiscreteAccessory,
    
    /// <remarks/>
    IfcDistributionChamberElement,
    
    /// <remarks/>
    IfcDistributionControlElement,
    
    /// <remarks/>
    IfcDistributionElement,
    
    /// <remarks/>
    IfcDistributionFlowElement,
    
    /// <remarks/>
    IfcDoor,
    
    /// <remarks/>
    IfcDuctFitting,
    
    /// <remarks/>
    IfcDuctSegment,
    
    /// <remarks/>
    IfcDuctSilencer,
    
    /// <remarks/>
    IfcEdgeFeature,
    
    /// <remarks/>
    IfcElectricDistributionBoard,
    
    /// <remarks/>
    IfcElectricDistributionPoint,
    
    /// <remarks/>
    IfcElectricalElement,
    
    /// <remarks/>
    IfcElectricAppliance,
    
    /// <remarks/>
    IfcElectricGenerator,
    
    /// <remarks/>
    IfcElectricMotor,
    
    /// <remarks/>
    IfcElectricTimeControl,
    
    /// <remarks/>
    IfcElement,
    
    /// <remarks/>
    IfcElementAssembly,
    
    /// <remarks/>
    IfcElementComponent,
    
    /// <remarks/>
    IfcEngine,
    
    /// <remarks/>
    IfcEquipmentElement,
    
    /// <remarks/>
    IfcEvaporativeCooler,
    
    /// <remarks/>
    IfcEvaporator,
    
    /// <remarks/>
    IfcFan,
    
    /// <remarks/>
    IfcFastener,
    
    /// <remarks/>
    IfcFilter,
    
    /// <remarks/>
    IfcFeatureElement,
    
    /// <remarks/>
    IfcFeatureElementAddition,
    
    /// <remarks/>
    IfcFeatureElementSubtraction,
    
    /// <remarks/>
    IfcFireSuppressionTerminal,
    
    /// <remarks/>
    IfcFlowInstrument,
    
    /// <remarks/>
    IfcFlowMeter,
    
    /// <remarks/>
    IfcFlowStorageDevice,
    
    /// <remarks/>
    IfcFooting,
    
    /// <remarks/>
    IfcFurnishingElement,
    
    /// <remarks/>
    IfcHeatExchanger,
    
    /// <remarks/>
    IfcHumidifier,
    
    /// <remarks/>
    IfcInterceptor,
    
    /// <remarks/>
    IfcJunctionBox,
    
    /// <remarks/>
    IfcLamp,
    
    /// <remarks/>
    IfcLightFixture,
    
    /// <remarks/>
    IfcMechanicalFastener,
    
    /// <remarks/>
    IfcMedicalDevice,
    
    /// <remarks/>
    IfcMember,
    
    /// <remarks/>
    IfcMotorConnection,
    
    /// <remarks/>
    IfcOpeningElement,
    
    /// <remarks/>
    IfcOutlet,
    
    /// <remarks/>
    IfcPile,
    
    /// <remarks/>
    IfcPipeFitting,
    
    /// <remarks/>
    IfcPipeSegment,
    
    /// <remarks/>
    IfcPlate,
    
    /// <remarks/>
    IfcProject,
    
    /// <remarks/>
    IfcProjectionElement,
    
    /// <remarks/>
    IfcProtectiveDevice,
    
    /// <remarks/>
    IfcPump,
    
    /// <remarks/>
    IfcRailing,
    
    /// <remarks/>
    IfcRamp,
    
    /// <remarks/>
    IfcRampFlight,
    
    /// <remarks/>
    IfcReinforcingBar,
    
    /// <remarks/>
    IfcReinforcingElement,
    
    /// <remarks/>
    IfcReinforcingMesh,
    
    /// <remarks/>
    IfcRoof,
    
    /// <remarks/>
    IfcRoundedEdgeFeature,
    
    /// <remarks/>
    IfcSanitaryTerminal,
    
    /// <remarks/>
    IfcSite,
    
    /// <remarks/>
    IfcSlab,
    
    /// <remarks/>
    IfcSolarDevice,
    
    /// <remarks/>
    IfcSpace,
    
    /// <remarks/>
    IfcSpaceHeater,
    
    /// <remarks/>
    IfcStackTerminal,
    
    /// <remarks/>
    IfcStair,
    
    /// <remarks/>
    IfcStairFlight,
    
    /// <remarks/>
    IfcSwitchingDevice,
    
    /// <remarks/>
    IfcTank,
    
    /// <remarks/>
    IfcTendon,
    
    /// <remarks/>
    IfcTendonAnchor,
    
    /// <remarks/>
    IfcTransformer,
    
    /// <remarks/>
    IfcTransportElement,
    
    /// <remarks/>
    IfcTubeBundle,
    
    /// <remarks/>
    IfcUnitaryControlElement,
    
    /// <remarks/>
    IfcUnitaryEquipment,
    
    /// <remarks/>
    IfcValve,
    
    /// <remarks/>
    IfcVirtualElement,
    
    /// <remarks/>
    IfcWall,
    
    /// <remarks/>
    IfcWallStandardCase,
    
    /// <remarks/>
    IfcWasteTerminal,
    
    /// <remarks/>
    IfcWindow,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class PropertySetBindings {
    
    private PropertySetBind[] propertySetBindField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PropertySetBind")]
    public PropertySetBind[] PropertySetBind {
        get {
            return this.propertySetBindField;
        }
        set {
            this.propertySetBindField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class Rules {
    
    private Include[] includeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Include")]
    public Include[] Include {
        get {
            return this.includeField;
        }
        set {
            this.includeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tekla.com/IfcProperties")]
[System.Xml.Serialization.XmlRootAttribute("Where", Namespace="http://www.tekla.com/IfcProperties", IsNullable=false)]
public partial class WhereType {
    
    private CompareType[] compareField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Compare")]
    public CompareType[] Compare {
        get {
            return this.compareField;
        }
        set {
            this.compareField = value;
        }
    }
}
